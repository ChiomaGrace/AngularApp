"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = exports.env = void 0;
const env_js_1 = require("./env.js");
const chalk = require("chalk");
function prepareEnv(processEnv) {
    const values = Object.keys(processEnv)
        .filter((key) => key !== "NODE_ENV" && processEnv[key] !== undefined)
        .reduce((env, key) => {
        const value = JSON.stringify(processEnv[key]);
        env.raw[key] = processEnv[key];
        env.stringified[key] = value;
        env.full[`process.env.${key}`] = value;
        env.full[`import.meta.env.${key}`] = value;
        return env;
    }, {
        raw: {},
        stringified: {},
        full: {},
    });
    return values;
}
function print(options, envPaths, appEnv, values) {
    console.log("---------------------------------");
    console.log(`${chalk.green("-")} Verbose: `, options.verbose);
    console.log(`${chalk.green("-")} Prefix: `, options.prefix);
    console.log(`${chalk.green("-")} Root directory: `, options.root);
    console.log(`${chalk.green("-")} Working directory: `, options.cwd);
    console.log(`${chalk.green("-")} Environment files: `);
    envPaths.forEach((envPath) => {
        console.log(`${chalk.green(" ✔")} ${envPath}`);
    });
    console.log(`- Injected keys:`);
    console.log(`${chalk.green(" ✔")} ${options.appEnv} => ${appEnv}`);
    for (const key in values) {
        console.log(`${chalk.green(" ✔")} ${key}`);
    }
    console.log("---------------------------------\n");
}
function env(options = {}) {
    options.appEnv = options.appEnv ?? "NODE_ENV";
    options.root = options.root ?? ".";
    const appEnv = process.env[options.appEnv] ?? process.env.NODE_ENV;
    const envPaths = (0, env_js_1.paths)(appEnv, options.root ?? ".", options.cwd);
    (0, env_js_1.expand)(envPaths);
    const values = (0, env_js_1.filter)(process.env, new RegExp(options.prefix, "i"));
    if (options.verbose) {
        print(options, envPaths, appEnv, values);
    }
    return prepareEnv({ ...values, [options.appEnv]: appEnv });
}
exports.env = env;
exports.plugin = env;
//# sourceMappingURL=plugin.js.map