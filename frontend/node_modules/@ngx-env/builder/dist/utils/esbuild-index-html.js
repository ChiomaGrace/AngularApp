"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.devServerIndexHtml = exports.indexHtml = void 0;
const core_1 = require("@dotenv-run/core");
const fs_1 = require("fs");
const path_1 = require("path");
const variables_reducer_1 = require("./variables-reducer");
const glob = require("glob");
function replaceInFile(filePath, raw) {
    try {
        const content = (0, fs_1.readFileSync)(filePath, "utf-8");
        (0, fs_1.writeFileSync)(filePath, (0, variables_reducer_1.variablesReducer)(content, raw));
    }
    catch (e) {
        console.log(`❌ Failed to replace variables in ${filePath} ❌`);
        throw e;
    }
}
function indexHtml(outputDir, dotEnvOptions, ssr = false) {
    try {
        const raw = (0, core_1.env)(dotEnvOptions).raw;
        glob.sync(`${outputDir}/browser/**/*.html`).forEach((filePath) => {
            replaceInFile(filePath, raw);
        });
        if (ssr) {
            replaceInFile((0, path_1.resolve)(outputDir, "server/index.server.html"), raw);
        }
    }
    catch (e) {
        console.error(e);
    }
}
exports.indexHtml = indexHtml;
function devServerIndexHtml(content, dotEnvOptions) {
    const raw = (0, core_1.env)(dotEnvOptions).raw;
    return (0, variables_reducer_1.variablesReducer)(content, raw);
}
exports.devServerIndexHtml = devServerIndexHtml;
